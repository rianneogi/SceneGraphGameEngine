#version 330

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;

// Notice that the "1" here equals the "1" in glVertexAttribPointer
layout(location = 1) in vec2 vertexUV;

layout(location = 2) in vec3 vertexNormal;

out vec2 UV;
 
// Values that stay constant for the whole mesh.
uniform mat4 M;
uniform mat4 V;
uniform mat4 P;
 
void main()
{ 
    // Output position of the vertex, in clip space : MVP * position
    gl_Position =  P*V*M * vec4(vertexPosition_modelspace,1);
    UV = vertexUV;
}