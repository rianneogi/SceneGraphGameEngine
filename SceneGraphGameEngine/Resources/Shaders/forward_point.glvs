//#version 330

layout(location = 0) in vec3 vertexPosition_modelspace;

#ifdef MULTI_TEXTURE
layout(location = 1) in vec3 vertexUV;
#elif defined(SOLID_COLOR)
layout(location = 1) in vec3 vertexUV;
#else
layout(location = 1) in vec2 vertexUV;
#endif

layout(location = 2) in vec3 vertexNormal;

#ifdef MULTI_TEXTURE
out vec3 UV;
#elif defined(SOLID_COLOR)
out vec3 UV;
#else
out vec2 UV;
#endif
out vec3 fragPos;
out vec3 fragNormal;
 
// Values that stay constant for the whole mesh.
uniform mat4 gModelMat;
uniform mat4 gViewMat;
uniform mat4 gProjectionMat;
 
void main()
{ 
    // Output position of the vertex, in clip space : MVP * position
    gl_Position =  gProjectionMat*gViewMat*gModelMat * vec4(vertexPosition_modelspace,1);
    UV = vertexUV;
	fragPos = vertexPosition_modelspace;
	fragNormal = vertexNormal;
}