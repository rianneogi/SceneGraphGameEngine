//#version 330

layout(location = 0) in vec3 vertexPosition;

layout(location = 1) in vec2 vertexUV;

layout(location = 2) in vec3 vertexNormal;

out vec4 clipSpace;
out vec2 UV;
out vec3 toCameraVector;

uniform mat4 gModelMat;
uniform mat4 gViewMat;
uniform mat4 gProjectionMat;
uniform vec3 gEyePos;

void main()
{
	vec4 worldPosition = gModelMat * vec4(vertexPosition,1);
    gl_Position =  gProjectionMat*gViewMat*worldPosition;
    clipSpace = gl_Position;
	UV = worldPosition.xz/32.0;
	toCameraVector = gEyePos - worldPosition.xyz;
}